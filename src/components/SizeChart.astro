---
import sizeChartContent from './content/sizeCharts.json';

interface Props {
  productTitle: string;
  language: string;
}

const { productTitle, language = 'en' } = Astro.props;

// Common size data across all languages
const commonSizes = {
  clothing: [
    ['S', '26.5 inch', '20 inch', '23.98 inch'],
    ['M', '27.48 inch', '21.97 inch', '24.29 inch'],
    ['L', '28.46 inch', '23.98 inch', '24.37 inch'],
    ['XL', '29.53 inch', '24.99 inch', '24.80 inch'],
    ['2XL', '30 inch', '27.95 inch', '25 inch'],
  ],
  shoes: [
    ['6', '5', '38', '23.5'],
    ['7', '6', '39', '24.1'],
    ['8', '7', '40', '24.8'],
    ['9', '8', '41', '25.4'],
    ['10', '9', '42', '26'],
  ],
  // ... other size arrays
};

function getProductType(title: string): string {
  const title_lower = title.toLowerCase();
  
  if (title_lower.includes('shirt') || 
      title_lower.includes('hoodie') || 
      title_lower.includes('jacket') || 
      title_lower.includes('sweater') ||
      title_lower.includes('vest')) {
    return 'clothing';
  }
  // ... rest of type detection
  return null;
}

// Get content for current language, fallback to English
const content = sizeChartContent[language] || sizeChartContent['en'];
const productType = getProductType(productTitle);

// Only proceed if we have content for this product type
const chartContent = productType && content.charts[productType];
---

{chartContent && (
  <div class="border-t pt-8">
    <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
      </svg>
      {content.title} {productType.charAt(0).toUpperCase() + productType.slice(1)}
    </h2>
    
    <div class="overflow-x-auto bg-white rounded-xl shadow-sm">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            {chartContent.headers.map((header) => (
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                {header}
              </th>
            ))}
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {commonSizes[productType].map((sizeRow) => (
            <tr class="hover:bg-gray-50 transition-colors">
              {sizeRow.map((cell) => (
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {cell}
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    
    <div class="mt-4 bg-blue-50 rounded-xl p-4 text-sm text-blue-700">
      <h3 class="font-semibold mb-2">{content.measurementTips}</h3>
      <ul class="list-disc list-inside space-y-1">
        {chartContent.tips.map((tip) => (
          <li>{tip}</li>
        ))}
      </ul>
    </div>
  </div>
)} 