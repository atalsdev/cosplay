---
import Header from '../themes/default/components/Header';
import { useCurrencyStore } from '../store/currency';

const theme = import.meta.env.THEME || 'default';
const siteName = import.meta.env.PUBLIC_SITE_NAME || 'Drivi';
const PROJECT_TYPE = import.meta.env.PROJECT_TYPE || 'default';

// Import styles
let headerStyles = {};
try {
  const { luxuryHeaderStyle } = await import(`../themes/${theme}/styles/header/luxury.mjs`);
  headerStyles = luxuryHeaderStyle;
} catch (error) {
  console.error('Failed to load header styles:', error);
}

// Properly handle dynamic imports with default exports
const { default: BaseHead } = await import(`../themes/${theme}/components/BaseHead.astro`);
const { default: Footer } = await import(`../themes/${theme}/components/Footer.astro`);

// Menu configuration with language-prefixed paths
const menuConfig = {
  en: {
    default: {
      items: [
        { label: "Collections", href: "/en/collections" },
        { label: "Helmets", href: "/en/helmets" },
        { label: "Jackets", href: "/en/jackets" },
        { label: "Accessories", href: "/en/accessories" }
      ]
    },
    degital: {
      items: [
        { label: "Templates", href: "/en/templates" },
        { label: "Plugins", href: "/en/plugins" },
        { label: "Scripts", href: "/en/scripts" },
        { label: "Resources", href: "/en/resources" }
      ]
    }
  },
  fr: {
    default: {
      items: [
        { label: "Collections", href: "/fr/collections" },
        { label: "Casques", href: "/fr/helmets" },
        { label: "Vestes", href: "/fr/jackets" },
        { label: "Accessoires", href: "/fr/accessories" }
      ]
    },
    degital: {
      items: [
        { label: "Modèles", href: "/fr/templates" },
        { label: "Extensions", href: "/fr/plugins" },
        { label: "Scripts", href: "/fr/scripts" },
        { label: "Ressources", href: "/fr/resources" }
      ]
    }
  },
  de: {
    default: {
      items: [
        { label: "Kollektionen", href: "/de/collections" },
        { label: "Helme", href: "/de/helmets" },
        { label: "Jacken", href: "/de/jackets" },
        { label: "Zubehör", href: "/de/accessories" }
      ]
    },
    degital: {
      items: [
        { label: "Vorlagen", href: "/de/templates" },
        { label: "Plugins", href: "/de/plugins" },
        { label: "Skripte", href: "/de/scripts" },
        { label: "Ressourcen", href: "/de/resources" }
      ]
    }
  }
};

const languages = {
  en: "English",
  fr: "Français",
  de: "Deutsch"
};

interface Props {
  title: string;
}

const { title } = Astro.props;

// Get current path for language switching
const currentPath = Astro.url.pathname;

// Add currency configuration
const currencies = {
  USD: '$',
  EUR: '€',
  GBP: '£',
  JPY: '¥',
  CAD: 'C$',
  AUD: 'A$',
  // Add more currencies as needed
};

// Fetch exchange rates with better error handling
let exchangeRates = {};
try {
  const response = await fetch('https://api.exchangerate-api.com/v4/latest/USD');
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  const data = await response.json();
  exchangeRates = data.rates;
  console.log('Fetched exchange rates:', exchangeRates);
} catch (error) {
  console.error('Failed to fetch exchange rates:', error);
  // Provide fallback rates for common currencies
  exchangeRates = {
    USD: 1,
    EUR: 0.85,
    GBP: 0.73,
    JPY: 110.0,
    // Add more fallback rates as needed
  };
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script define:vars={{ exchangeRates }}>
      // Make exchange rates available globally
      window.exchangeRates = exchangeRates;
      console.log('Initialized exchange rates:', window.exchangeRates);
    </script>
  </head>
  <body class="min-h-screen flex flex-col">
    <Header 
      client:load 
      siteName={siteName}
      menuConfig={menuConfig}
      languages={languages}
      projectType={PROJECT_TYPE}
      currentPath={currentPath}
      currencies={currencies}
      styles={headerStyles}
    />
    <slot />
    <Footer />

    <script>
      // Initialize currency store with exchange rates
      import { useCurrencyStore } from '../store/currency';
      
      // Wait for DOM content to be loaded
      document.addEventListener('DOMContentLoaded', () => {
        if (window.exchangeRates) {
          console.log('Setting exchange rates in store:', window.exchangeRates);
          useCurrencyStore.getState().setRates(window.exchangeRates);
        } else {
          console.error('Exchange rates not available');
        }
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
  }
  html {
    font-family: system-ui, sans-serif;
    background: #fff;
    scroll-behavior: smooth;
  }
</style>