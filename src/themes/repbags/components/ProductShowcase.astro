---
import { getCollectionByHandle } from '../../../lib/controller';
import { ArrowRight } from 'lucide-react';

interface Props {
  title: string;
  description: string;
  viewAllLink: string;
  lang: string;
  collectionHandle: string;
  limit?: number;
}

const { 
  title, 
  description, 
  viewAllLink, 
  lang, 
  collectionHandle,
  limit = 4 
} = Astro.props;

// Fetch collection products using getCollectionByHandle
const collection = await getCollectionByHandle(collectionHandle, lang?.toUpperCase());
const products = collection?.products?.edges?.slice(0, limit) || [];

// Format price to locale string
const formatPrice = (amount: string, currencyCode: string) => {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: currencyCode,
  }).format(parseFloat(amount));
};
---

<section class="py-24 bg-white">
  <div class="max-w-7xl mx-auto px-4">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-['Montserrat'] font-light uppercase tracking-[0.25em] text-gray-900 mb-6">
        {title}
      </h2>
      <p class="text-lg text-gray-600 font-light tracking-wide max-w-2xl mx-auto">
        {description}
      </p>
    </div>

    <!-- Products Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      {products.map(({ node: product }) => {
        const firstVariant = product.variants.edges[0]?.node;
        const price = firstVariant?.price;
        
        return (
          <a 
            href={`/${lang}/products/${product.handle}`}
            class="group bg-white hover:bg-gray-50 transition-all duration-500"
          >
            <div class="aspect-[3/4] overflow-hidden bg-gray-100">
              {product.images?.edges[0]?.node ? (
                <img
                  src={product.images.edges[0].node.url}
                  alt={product.images.edges[0].node.altText || product.title}
                  class="w-full h-full object-cover transform scale-100 group-hover:scale-105 transition-transform duration-700"
                  loading="lazy"
                />
              ) : (
                <div class="w-full h-full flex items-center justify-center bg-gray-50">
                  <span class="text-gray-400 font-light">No image available</span>
                </div>
              )}
            </div>
            
            <div class="p-6">
              <h3 class="font-['Montserrat'] uppercase text-lg mb-2 text-gray-900 tracking-[0.15em] font-light group-hover:text-black transition-colors">
                {product.title}
              </h3>
              
              <div class="flex items-center justify-between mt-4">
                {price && (
                  <span class="text-base font-light tracking-wider text-gray-900">
                    {formatPrice(price.amount, price.currencyCode)}
                  </span>
                )}
                <span class="text-gray-900 opacity-0 group-hover:opacity-100 transform translate-x-4 group-hover:translate-x-0 transition-all duration-500">
                  <ArrowRight className="w-5 h-5" />
                </span>
              </div>

              <!-- Decorative Line -->
              <div class="mt-4 h-px bg-gradient-to-r from-gray-200 via-gray-200 to-transparent transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500 origin-left"></div>
            </div>
          </a>
        );
      })}
    </div>

    <!-- View All Link -->
    <div class="text-center mt-16">
      <a
        href={viewAllLink}
        class="inline-flex items-center gap-3 font-['Montserrat'] uppercase tracking-[0.2em] text-gray-900 
               hover:text-black transition-colors text-sm font-light group"
      >
        View All Products
        <span class="transform group-hover:translate-x-2 transition-transform duration-500">
          <ArrowRight className="w-5 h-5" />
        </span>
      </a>
    </div>
  </div>
</section>

<style>
  /* Smooth text rendering */
  h2, h3, p {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Elegant hover transitions */
  .group {
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .group:hover {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.05);
  }

  /* Image hover effect */
  .group:hover img {
    filter: brightness(0.95);
  }
</style>