---
interface FaqItem {
  question: string;
  answer: string;
}

interface Props {
  title: string;
  description: string;
  faqs: FaqItem[];
}

const { title, description, faqs } = Astro.props;
---

<section class="py-32 bg-white">
  <div class="max-w-4xl mx-auto px-4">
    <!-- Section Header -->
    <div class="text-center mb-20">
      <h2 class="text-3xl md:text-4xl font-['Montserrat'] font-light uppercase tracking-[0.25em] text-gray-900 mb-6">
        {title}
      </h2>
      <p class="text-lg text-gray-600 font-light tracking-wide max-w-2xl mx-auto">
        {description}
      </p>
    </div>
    
    <!-- FAQ Items -->
    <div class="space-y-6">
      {faqs.map((faq, index) => (
        <div class="group border-b border-gray-200 pb-6 hover:bg-gray-50/50 transition-colors duration-500">
          <button
            class="w-full flex items-center justify-between text-left focus:outline-none"
            aria-expanded="false"
            aria-controls={`faq-${index}`}
          >
            <h3 class="font-['Montserrat'] uppercase tracking-[0.15em] text-lg text-gray-900 group-hover:text-black transition-colors duration-300 font-light pr-8">
              {faq.question}
            </h3>
            <span class="ml-6 flex-shrink-0">
              <svg 
                class="w-5 h-5 text-gray-900 transform transition-transform duration-500 ease-out group-[.active]:rotate-180" 
                fill="none" 
                viewBox="0 0 24 24" 
                stroke="currentColor"
                stroke-width="1"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
              </svg>
            </span>
          </button>
          <div
            id={`faq-${index}`}
            class="mt-6 hidden group-[.active]:block"
          >
            <p class="text-gray-600 leading-relaxed font-light tracking-wide pr-8">
              {faq.answer}
            </p>
          </div>

          <!-- Decorative Line -->
          <div class="absolute left-0 right-0 bottom-0 h-px bg-gradient-to-r from-gray-200 via-gray-200 to-transparent transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500 origin-left"></div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // FAQ Toggle functionality - Keeping original logic
  document.querySelectorAll('button[aria-controls^="faq-"]').forEach(button => {
    button.addEventListener('click', () => {
      const group = button.closest('.group');
      const isActive = group.classList.contains('active');
      
      // Close all FAQs
      document.querySelectorAll('.group').forEach(g => g.classList.remove('active'));
      
      // Toggle clicked FAQ
      if (!isActive) {
        group.classList.add('active');
      }
      
      // Update aria-expanded
      button.setAttribute('aria-expanded', !isActive);
    });
  });
</script>

<style>
  /* Smooth text rendering */
  h2, h3, p {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Elegant transitions */
  .group {
    position: relative;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Question hover effect */
  .group:hover button h3 {
    transform: translateX(4px);
  }

  /* Answer animation */
  .group-[.active]:block {
    animation: fadeIn 0.5s ease-out forwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Ensure smooth transitions */
  .group svg {
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Button focus styles */
  button:focus-visible {
    outline: 2px solid rgba(0, 0, 0, 0.1);
    outline-offset: 4px;
    border-radius: 2px;
  }
</style> 