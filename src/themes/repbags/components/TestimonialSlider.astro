---
interface Testimonial {
  id: string;
  author: string;
  role: string;
  content: string;
  avatar?: string;
}

interface Props {
  title: string;
  testimonials: Testimonial[];
}

const { title, testimonials } = Astro.props;

// Helper function to get initials from name
function getInitials(name: string): string {
  return name
    .split(' ')
    .map(word => word[0])
    .join('')
    .toUpperCase()
    .slice(0, 2);
}

// Generate random pastel background color
function getRandomPastelColor(name: string): string {
  // Use name as seed for consistent color per user
  const hash = name.split('').reduce((acc, char) => char.charCodeAt(0) + acc, 0);
  const hue = hash % 360;
  return `hsl(${hue}, 30%, 95%)`; // Lighter, more elegant pastel
}
---

<section class="py-32 bg-black">
  <div class="max-w-7xl mx-auto px-4">
    <!-- Section Header -->
    <h2 class="text-3xl md:text-4xl font-['Montserrat'] font-light uppercase tracking-[0.25em] text-white/90 text-center mb-20">
      {title}
    </h2>
    
    <!-- Testimonials Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {testimonials.map((testimonial) => (
        <div class="bg-white/5 backdrop-blur-sm p-10 hover:bg-white/10 transition-all duration-500">
          <!-- Quote Icon -->
          <div class="mb-8">
            <svg class="w-8 h-8 text-white/20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z" />
            </svg>
          </div>
          
          <!-- Testimonial Content -->
          <blockquote class="mb-10">
            <p class="text-white/80 leading-relaxed font-light tracking-wide italic">
              "{testimonial.content}"
            </p>
          </blockquote>
          
          <!-- Author Info -->
          <div class="flex items-center gap-5">
            <div class="w-14 h-14 rounded-full overflow-hidden border border-white/10">
              {testimonial.avatar ? (
                <img
                  src={testimonial.avatar}
                  alt={testimonial.author}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              ) : (
                <div
                  class="w-full h-full flex items-center justify-center text-gray-900 font-medium"
                  style={`background-color: ${getRandomPastelColor(testimonial.author)}`}
                >
                  {getInitials(testimonial.author)}
                </div>
              )}
            </div>
            <div>
              <div class="font-['Montserrat'] uppercase tracking-[0.15em] text-white/90 text-sm font-light">
                {testimonial.author}
              </div>
              <div class="text-sm text-white/60 mt-1 tracking-wider font-extralight">
                {testimonial.role}
              </div>
            </div>
          </div>

          <!-- Decorative Line -->
          <div class="absolute bottom-0 left-0 right-0">
            <div class="h-px bg-gradient-to-r from-white/10 via-white/5 to-transparent"></div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  /* Smooth text rendering */
  h2, blockquote, p {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Quote styling */
  blockquote p::before,
  blockquote p::after {
    content: '';
    display: inline;
  }

  /* Card hover effect */
  div[class*="bg-white/5"] {
    transform: translateY(0);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  div[class*="bg-white/5"]:hover {
    transform: translateY(-4px);
  }

  /* Dark mode optimization */
  section {
    color-scheme: dark;
  }

  /* Avatar border glow */
  .rounded-full {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.05);
  }
</style>