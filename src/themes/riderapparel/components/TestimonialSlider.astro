---
interface Testimonial {
  id: string;
  author: string;
  role: string;
  content: string;
  avatar?: string;
}

interface Props {
  title: string;
  testimonials: Testimonial[];
}

const { title, testimonials } = Astro.props;

// Helper function to get initials from name
function getInitials(name: string): string {
  return name
    .split(' ')
    .map(word => word[0])
    .join('')
    .toUpperCase()
    .slice(0, 2);
}

// Generate random pastel background color
function getRandomPastelColor(name: string): string {
  // Use name as seed for consistent color per user
  const hash = name.split('').reduce((acc, char) => char.charCodeAt(0) + acc, 0);
  const hue = hash % 360;
  return `hsl(${hue}, 70%, 85%)`; // Pastel version using HSL
}
---

<section class="py-24 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4">
    <!-- Section Header -->
    <h2 class="text-4xl font-['Oswald'] uppercase tracking-wide text-center mb-16">{title}</h2>
    
    <!-- Testimonials Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {testimonials.map((testimonial) => (
        <div class="bg-white p-8 shadow-sm hover:shadow-md transition-shadow duration-300">
          <!-- Quote Icon -->
          <div class="mb-6">
            <svg class="w-8 h-8 text-gray-300" fill="currentColor" viewBox="0 0 24 24">
              <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z" />
            </svg>
          </div>
          
          <!-- Testimonial Content -->
          <blockquote class="mb-8">
            <p class="text-gray-600 leading-relaxed italic">
              "{testimonial.content}"
            </p>
          </blockquote>
          
          <!-- Author Info -->
          <div class="flex items-center gap-4">
            <div class="w-12 h-12 rounded-full overflow-hidden">
              {testimonial.avatar ? (
                <img
                  src={testimonial.avatar}
                  alt={testimonial.author}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              ) : (
                <div
                  class="w-full h-full flex items-center justify-center text-gray-700 font-medium"
                  style={`background-color: ${getRandomPastelColor(testimonial.author)}`}
                >
                  {getInitials(testimonial.author)}
                </div>
              )}
            </div>
            <div>
              <div class="font-['Oswald'] uppercase tracking-wide text-gray-900">
                {testimonial.author}
              </div>
              <div class="text-sm text-gray-500 mt-0.5">
                {testimonial.role}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  blockquote p::before,
  blockquote p::after {
    content: '';
    display: inline;
  }
</style>